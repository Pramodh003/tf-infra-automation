name: Terraform automation.

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read
  
env:
  AWS_REGION: 'us-east-1'
  IMAGE_TAG: "latest"
  ECR_REPOSITORY: "tf-automation-repo"
  TASK_DEFINITION: task-definition.json
  TASK_DEFINITION_FAMILY: app-td
  CONTAINER_NAME: "app"
  SERVICE: "app-ecs-service"
  CLUSTER: "app-cluster"

jobs:
  terraform:
    name: terraform
    runs-on: ubuntu-latest

    steps:
      - name: checkout code from repo
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: build docker image
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ env.IMAGE_TAG }}
        run: |
            docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./app/
            docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
            echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
            
      - name: Setup Terraform with specified version on the runner
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.0
          
      - name: Terraform init & terraform apply --auto-approve
        run: terraform init
        working-directory: terraform
        
      - name: Apply terraform
        run: terraform apply --auto-approve
        working-directory: terraform
        
    #   - name: Apply terraform
    #     run: terraform destroy --auto-approve
    #     working-directory: terraform

      - name: Export task defnition
        id: export-td
        env:
          TD_NAME: ${{ env.TASK_DEFINITION }}
          TD_FAMILY: ${{ env.TASK_DEFINITION_FAMILY }}
        run: |
          rm -rf $TD_NAME
          aws ecs describe-task-definition --task-definition $TD_FAMILY --query taskDefinition > $TD_NAME

      - name: check exported task definition
        run: |
          ls

      - name: update the image in task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ env.TASK_DEFINITION }}
          container-name: ${{ env.CONTAINER_NAME }}
          image: ${{ steps.build-image.outputs.image }}

      - name: Deploy task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ env.TASK_DEFINITION }}
          service: ${{ env.SERVICE }}
          cluster: ${{ env.CLUSTER }}

            


            
